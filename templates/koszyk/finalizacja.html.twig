{% extends 'base.html.twig' %}

{% block title %}Danmal - Koszyk{% endblock %}

{% block body %}

    <section style="background-color: #eee;">
        <div class="container h-100 py-5">
            <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col">
                    <div class="card shopping-cart" style="border-radius: 15px;">
                        <div class="card-body text-black">


                                <div class="alert alert-info">
                                    <strong>Dziękujemy za złożenie zamówienia. Jego realizację zawsze możesz podejrzeć w panelu: <a href="{{ path('admin_dashboard') }}">złożone zamówienie</a>.</strong>
                                </div>




                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
{% endblock %}

{% block javascripts %}
    {{ parent() }} {# Zachowaj przekazywane skrypty JS z nadklasy #}
    <script src="https://code.jquery.com/jquery-3.1.1.min.js" integrity="sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8=" crossorigin="anonymous"></script>

    <script>

        function cartUpdate(element, change, rodzajProduktu) {


            const orderDetails = document.getElementById('order-details');
            const orderId = orderDetails.getAttribute('data-id');

            console.log('Aktualizuje koszyk dla zamówienia o id:', orderId);

            const produktId = element.closest('.btn-toolbar').getAttribute('data-id');
            console.log('Produkt ID:', produktId);
            // Tu umieść kod aktualizacji koszyka

            const quantityInput = element.querySelector('input[type=number]');
            const currentQuantity = parseInt(quantityInput.value, 10);
            console.log('Nowa ilość:', currentQuantity);

            const cenaJednostkowaElement = element.closest('.d-flex').querySelector('.cena-jednostkowa');
            const cenaJednostkowa = parseFloat(cenaJednostkowaElement.textContent.replace('zł', ''));
            console.log('Cena jednostkowa:', cenaJednostkowa);

            const podsumaKoszykElement = element.closest('.d-flex').querySelector('.podsuma-koszyk h5');
            const aktualnaPodsuma = parseFloat(podsumaKoszykElement.textContent.replace('zł', ''));

            const nowaPodsuma = cenaJednostkowa * currentQuantity;
            podsumaKoszykElement.textContent = nowaPodsuma.toFixed(2) + 'zł';


            console.log('Rodzaj produktu:', rodzajProduktu);

            cartSumUpdate();


            const specificPriceUrl = '{{ path('app_koszyk_update', {'id': '__skladowa1__', 'productid': '__skladowa2__', 'qty': '__skladowa3__', 'rodzaj': '__skladowa4__'}) }}'
                .replace('__skladowa1__', orderId)
                .replace('__skladowa2__', produktId)
                .replace('__skladowa3__', currentQuantity)
                .replace('__skladowa4__', rodzajProduktu);
            $.ajax({
                url: specificPriceUrl,
                type: 'POST',
                success: (data) => {


                }
            });

        }

        function cartSumUpdate() {
            // Przejrzyj wszystkie elementy .podsuma-koszyk i zsumuj wartości
            const podsumaKoszykElements = document.querySelectorAll('.podsuma-koszyk h5');
            let cartTotal = 0;
            podsumaKoszykElements.forEach(element => {
                cartTotal += parseFloat(element.textContent);
            });

            // Zaktualizuj tekst w #cartTotal
            document.getElementById('cartTotal').textContent = cartTotal.toFixed(2) + 'zł';
        }

        // Funkcja do zsumowania wartości inputów o klasie "quantity"
        function sumQuantityInputs() {
            let totalQuantity = 0;

            // Iteruj przez wszystkie inputy o klasie "quantity"
            $('.quantity').each(function() {
                const quantity = parseFloat($(this).val()) || 0;
                totalQuantity += quantity;
            });

            // Aktualizuj element z całkowitą ilością
            $('#cart-total-items').text(totalQuantity);

            localStorage.setItem('totalQuantity', totalQuantity);


        }

        $(document).ready(function() {
            // Wywołaj funkcję po zaczytaniu strony
            sumQuantityInputs();

            // Dodaj obsługę zdarzeń zmiany ilości w inputach
            $('.quantity').on('input', function() {
                // Wywołaj funkcję cartUpdate po zmianie ilości

                    const rodzajProduktu1 = $(this).closest('.flex-grow-1').find('.rodzaj').val();

                    console.log('rodzaj produktu:', rodzajProduktu1);


                cartUpdate(this.parentNode, 0, rodzajProduktu1);
                sumQuantityInputs(); // Aktualizuj ilość w localStorage

                // Wywołaj AJAX po zmianie ilości
                const orderId = $('#order-details').attr('data-id');
                const produktId = $(this).closest('.btn-toolbar').attr('data-id');
                const currentQuantity = parseFloat($(this).val()) || 0;

                const specificPriceUrl = '{{ path('app_koszyk_update', {'id': '__skladowa1__', 'productid': '__skladowa2__', 'qty': '__skladowa3__', 'rodzaj': '__skladowa4__'}) }}'
                    .replace('__skladowa1__', orderId)
                    .replace('__skladowa2__', produktId)
                    .replace('__skladowa3__', currentQuantity)
                    .replace('__skladowa4__', rodzajProduktu);
                $.ajax({
                    url: specificPriceUrl,
                    type: 'POST',
                    success: (data) => {
                        // Tutaj możesz obsłużyć odpowiedź AJAX, jeśli jest to konieczne
                    }
                });
            });
        });

    </script>


{% endblock %}