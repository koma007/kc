{# @var ea \EasyCorp\Bundle\EasyAdminBundle\Context\AdminContext #}
{# @var entity \EasyCorp\Bundle\EasyAdminBundle\Dto\EntityDto #}
{% extends ea.templatePath('layout') %}
{% form_theme new_form with ea.crud.formThemes only %}

{% trans_default_domain ea.i18n.translationDomain %}

{% block body_id 'ea-new-' ~ entity.name %}
{% block body_class 'ea-new ea-new-' ~ entity.name %}

{% set ea_field_assets = ea.crud.fieldAssets(constant('EasyCorp\\Bundle\\EasyAdminBundle\\Config\\Crud::PAGE_NEW')) %}

{% block head_javascript %}
    {{ parent() }}
    <script src="{{ asset('form.js', ea.assets.defaultAssetPackageName) }}"></script>
{% endblock head_javascript %}

{% block configured_head_contents %}
    {{ parent() }}
    {% for htmlContent in ea_field_assets.headContents %}
        {{ htmlContent|raw }}
    {% endfor %}
{% endblock %}

{% block configured_body_contents %}
    {{ parent() }}
    {% for htmlContent in ea_field_assets.bodyContents %}
        {{ htmlContent|raw }}
    {% endfor %}
{% endblock %}

{% block configured_stylesheets %}
    {{ parent() }}
    {{ include('@EasyAdmin/includes/_css_assets.html.twig', { assets: ea_field_assets.cssAssets }, with_context = false) }}
    {{ include('@EasyAdmin/includes/_encore_link_tags.html.twig', { assets: ea_field_assets.webpackEncoreAssets }, with_context = false) }}
{% endblock %}

{% block configured_javascripts %}
    {{ parent() }}
    <script src="https://code.jquery.com/jquery-3.1.1.min.js" integrity="sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8=" crossorigin="anonymous"></script>

    {{ include('@EasyAdmin/includes/_js_assets.html.twig', { assets: ea_field_assets.jsAssets }, with_context = false) }}
    {{ include('@EasyAdmin/includes/_encore_script_tags.html.twig', { assets: ea_field_assets.webpackEncoreAssets }, with_context = false) }}

    <script>
        function calculateSum() {
            var suma = 0;
            for (var i = 1; i <= 40; i++) {
                var inputId = 'Zeszyt_wartosc' + i;
                var inputValue = $('#' + inputId).val();
                if (inputValue) {
                    var value = parseFloat(inputValue.replace('.', '').replace(',', '.'));
                    if (!isNaN(value)) {
                        suma += value;
                    }
                }
            }

            //suma - góra
            var total = suma;
            //$('#calkowita_wartosc').text(total.toLocaleString('pl-PL') + ' zł');

            //wazon -dół
            var formattedTotal = total.toLocaleString('pl-PL', { minimumFractionDigits: 2 });
            // Usunięcie ewentualnych spacji
            formattedTotal = formattedTotal.replace(/\s/g, '');
            $('#Zeszyt_suma').val(formattedTotal);
        }

        $(document).ready(function() {
            let selectedOption = '';
            calculateSum();

            $('input[id^="Zeszyt_wartosc"]').on('input', function() {
                calculateSum();
            });

            //miesiąc
            var inputValue = $('#Zeszyt_miesiac').val();
            updateTytulKlient(inputValue);

            $('#Zeszyt_miesiac').on('input', function() {
                var inputValue = $(this).val();
                updateTytulKlient(inputValue);
            });

            var monthInput = document.getElementById('Zeszyt_miesiac');

            var selectedMonth = '';

            monthInput.addEventListener('change', function() {
                selectedMonth = monthInput.value;
            });

            monthInput.addEventListener('blur', function() {
                setTimeout(function() {

                    if (selectedMonth && selectedMonth !== monthInput.value) {

                        var date = new Date(selectedMonth);
                        date.setDate(1);
                        date.setHours(0, 0, 0, 0);
                        // Ustaw wartość pola month na uzupełnioną datę i czas
                        monthInput.value = date.toISOString().slice(0, 7);
                    }
                }, 2000);
            });

            //rodzaj
            //id całego elementu
            var idCalegoElementu;
            $('.rodzaje_kompozycji input[type="radio"]').on('change', function() {
                console.log('sasd');
                var elementId = $(this).closest('.rodzaje_kompozycji').attr('id');
                idCalegoElementu = elementId.match(/\d+/);

                var selectedValue = $(this).val();
                var selectedId = $(this).attr('id');
                var id = selectedId.substring(selectedId.lastIndexOf('_') + 1);
                var selectedOption = $('#Zeszyt_kompozycja' + idCalegoElementu + '_autocomplete').val();
                fetchPracaAfterRadioChange(selectedOption, selectedValue, idCalegoElementu);
            });
        });

        const sztukFields = document.querySelectorAll('[id^="Zeszyt_sztuk"]');
        const cenaFields = document.querySelectorAll('[id^="Zeszyt_cena"]');
        const wartoscFields = document.querySelectorAll('[id^="Zeszyt_wartosc"]');

        sztukFields.forEach((sztukField) => {
            const where = sztukField.id.slice(-1);
            const cenaField = document.getElementById(`Zeszyt_cena${where}`);
            const wartoscField = document.getElementById(`Zeszyt_wartosc${where}`);

            sztukField.addEventListener('input', () => {
                const sztuk = parseInt(sztukField.value);
                const cena = parseFloat(cenaField.value);
                const wartosc = sztuk * cena;
                wartoscField.value = wartosc.toFixed(2);
            });

            cenaField.addEventListener('input', () => {
                const sztuk = parseInt(sztukField.value);
                const cena = parseFloat(cenaField.value);
                const wartosc = sztuk * cena;
                wartoscField.value = wartosc.toFixed(2);
            });
        });

        function fetchCena(element, where) {
            console.log('fetch cena zeszyt');
            const selectedOption = element.value;
            var selectedRodzaj = $('#Zeszyt_rodzaj' + where + ' input[type="radio"]:checked').val();

            const specificPriceUrl = '{{ path('app_get_praca_kompozycja', {'id': '__kompozycja1__', 'cena': '__cena__'}) }}'.replace('__kompozycja1__', selectedOption).replace('__cena__', selectedRodzaj);

            const cenaKplFieldId = `Zeszyt_cena${where}`;
            const sztukFieldId = `Zeszyt_sztuk${where}`;
            const wartoscFieldId = `Zeszyt_wartosc${where}`;


            $.ajax({
                url: specificPriceUrl,
                type: 'POST',
                success: (data) => {

                    $('#' + cenaKplFieldId).val(data.cena.toString().replace('.', ','));

                    var cena = parseFloat(data.cena.toString().replace(',', '.'));
                    var sztuk = parseFloat($('#' + sztukFieldId).val());

                    if (!isNaN(cena) && !isNaN(sztuk)) {
                        var wynik = cena*sztuk
                        $('#' + wartoscFieldId).val(wynik.toString().replace('.', ','));
                    } else {
                        $('#' + wartoscFieldId).val('');
                    }
                    calculateSum();
                }
            });
        };


        function fetchPracaAfterRadioChange(selectedOption, selectedValue,idCalegoElementu) {

            const specificPriceUrl = '{{ path('app_get_praca_kompozycja', {'id': '__kompozycja1__', 'cena': '__cena__'}) }}'.replace('__kompozycja1__', selectedOption).replace('__cena__', selectedValue);
            const cenaKplFieldId = `Zeszyt_cena${idCalegoElementu}`;
            const sztukFieldId = `Zeszyt_sztuk${idCalegoElementu}`;
            const wartoscFieldId = `Zeszyt_wartosc${idCalegoElementu}`;

            $.ajax({
                url: specificPriceUrl,
                type: 'POST',
                success: (data) => {

                    //nowa cena
                    $('#' + cenaKplFieldId).val(data.cena.toString().replace('.', ','));

                    //przeliczenie ze sztukami po nowej cenie
                    var cena = parseFloat(data.cena.toString().replace(',', '.'));
                    var sztuk = parseFloat($('#' + sztukFieldId).val());

                    if (!isNaN(cena) && !isNaN(sztuk)) {
                        var wynik = cena*sztuk
                        $('#' + wartoscFieldId).val(wynik.toString().replace('.', ','));
                    } else {
                        $('#' + wartoscFieldId).val('');
                    }

                }
            });
            setTimeout(function() {
                calculateSum();
            }, 700);
        }

        function calculateWartosc(value, where) {
            const sztuk = document.getElementById('Zeszyt_sztuk' + where).value;
            const cena = document.getElementById('Zeszyt_cena' + where).value.replace(',', '.');
            const wartosc = (sztuk * cena).toFixed(2);

            document.getElementById('Zeszyt_wartosc' + where).value = wartosc.toString().replace(/\./g, ',');
            calculateSum();
        }

        // Funkcja do aktualizacji elementu tytul_klient
        function updateTytulKlient(inputValue) {
            var date = new Date(inputValue);
            var month = (date.getMonth() + 1).toString().padStart(2, '0');
            var year = date.getFullYear().toString();
            var formattedDate = month + '/' + year;
            document.getElementById('tytul_klient').textContent = formattedDate;
        }
    </script>
{% endblock %}

{% block content_title %}
    <div id="tytul_klient" class="d-inline-block">
    {%- apply spaceless -%}
        {% set custom_page_title = ea.crud.customPageTitle('new', null, ea.i18n.translationParameters) %}
        {{ custom_page_title is null
        ? ea.crud.defaultPageTitle('new', null, ea.i18n.translationParameters)|trans|raw
        : custom_page_title|trans|raw }}
    {%- endapply -%}
    </div>
{#    <div class="d-inline-block" style="float: right;">#}
{#        <div class="d-inline-block">SUMA:</div>#}
{#        <div id="calkowita_wartosc" class="d-inline-block">0 zł</div>#}
{#    </div>#}
{#    <div style="clear: both;"></div>#}

{% endblock %}

{% block page_actions %}
    {% for action in entity.actions %}
        {{ include(action.templatePath, { action: action }, with_context = false) }}
    {% endfor %}
{% endblock %}

{% block main %}

    {% block new_form %}
        {{ form_start(new_form) }}
        <div class="my-custom-class-for-errors">
            {{ form_start(new_form, {'attr': {'class': 'row g-2'}}) }}
        </div>


        <div class="col- mb-2">
            <div class="col-6">
                <p>Wybierz miesiąc:</p>
                {{ form_widget(new_form.miesiac) }}
                <small>{{ form_help(new_form.miesiac) }}</small>
                <div class="form-error">{{ form_errors(new_form.miesiac) }}</div>
            </div>
        </div>

        <div class="col-12 thick-separator mb-2">
            <hr class="my-4">
        </div>



        <div class="accordion" id="accordionZeszyt">
        {% for i in 1..40 %}
            {% set sztukNotEmpty = attribute(new_form, 'sztuk' ~ i).vars.value is not empty %}
            {% set cenaNotEmpty = attribute(new_form, 'cena' ~ i).vars.value is not empty %}
            {% set wartoscNotEmpty = attribute(new_form, 'wartosc' ~ i).vars.value is not empty %}
            {% set updatedAtNotEmpty = attribute(new_form, 'updatedAt' ~ i).vars.value is not empty %}

            {% set allFieldsFilled = sztukNotEmpty and cenaNotEmpty and wartoscNotEmpty and updatedAtNotEmpty %}

            <div class="accordion-item {% if not allFieldsFilled %}collapsed{% endif %}">
                <h2 class="accordion-header" id="heading{{ i }}">
                    <button class="accordion-button {% if allFieldsFilled %}collapsed{% endif %}" type="button" data-bs-toggle="collapse" data-bs-target="#collapse{{ i }}" aria-expanded="{{ not allFieldsFilled ? 'true' : 'false' }}" aria-controls="collapse{{ i }}">
                        Wpis {{ i }}
                    </button>
                </h2>
                <div id="collapse{{ i }}" class="accordion-collapse {% if not allFieldsFilled %}"{% else %}collapse{% endif %}" aria-labelledby="heading{{ i }}" data-bs-parent="#accordionExample">
                <div class="accordion-body">
                    <div class="row g-2">
                        <div class="col-8">
                            {{ form_widget(attribute(new_form, 'kompozycja' ~ i), {attr: {'onchange': 'fetchCena(this,' ~ i ~ ')', 'placeholder': 'kompozycja'}})}}
                            <small class="form-text text-muted">{{ form_help(attribute(new_form, 'kompozycja' ~ i)) }}</small>
                            <div class="invalid-feedback">{{ form_errors(attribute(new_form, 'kompozycja' ~ i)) }}</div>
                        </div>
                        <div class="col-4">
                            {{ form_widget(attribute(new_form, 'updatedAt' ~ i), {'attr': {'class': 'form-control','placeholder': 'data'}}) }}
                            <small class="form-text text-muted">{{ form_help(attribute(new_form, 'updatedAt' ~ i)) }}</small>
                            <div class="invalid-feedback">{{ form_errors(attribute(new_form, 'updatedAt' ~ i)) }}</div>
                        </div>
                        <div class="col-12">
                            {{ form_widget(attribute(new_form, 'rodzaj' ~ i), {'attr': {'class': 'form-control rodzaje_kompozycji'}}) }}
                            <small class="form-text text-muted">{{ form_help(attribute(new_form, 'rodzaj' ~ i)) }}</small>
                            <div class="invalid-feedback">{{ form_errors(attribute(new_form, 'rodzaj' ~ i)) }}</div>
                        </div>
                        <div class="col-4 mb-0">
                            {{ form_widget(attribute(new_form, 'sztuk' ~ i), {attr:{'onchange': 'calculateWartosc(this,' ~ i ~ ')', 'min': 0, 'placeholder': 'sztuk'}}) }}
                            <small class="form-text text-muted">{{ form_help(attribute(new_form, 'sztuk' ~ i)) }}</small>
                            <div class="invalid-feedback">{{ form_errors(attribute(new_form, 'sztuk' ~ i)) }}</div>
                        </div>
                        <div class="col-4 mb-0">
                            <div class="form-group">
                                {{ form_widget(attribute(new_form, 'cena' ~ i), {attr:{'onchange': 'calculateWartosc(this,' ~ i ~ ')', 'placeholder': 'cena'}}) }}
                                <small class="form-text text-muted">{{ form_help(attribute(new_form, 'cena' ~ i)) }}</small>
                                <div class="invalid-feedback">{{ form_errors(attribute(new_form, 'cena' ~ i)) }}</div>
                            </div>
                        </div>
                        <div class="col-4 mb-0">
                            {{ form_widget(attribute(new_form, 'wartosc' ~ i), {'attr': {'class': 'form-control', 'placeholder': 'wartość'}}) }}
                            <small class="form-text text-muted">{{ form_help(attribute(new_form, 'wartosc' ~ i)) }}</small>
                            <div class="invalid-feedback">{{ form_errors(attribute(new_form, 'wartosc' ~ i)) }}</div>
                        </div>
                        <div class="col-12 moja-nazwa">
                            {{ form_widget(attribute(new_form, 'nazwa' ~ i), {'attr': {'placeholder': 'opcjonalnie: niewycenione/uwagi'}}) }}
                            <small>{{ form_help(attribute(new_form, 'nazwa' ~ i)) }}</small>
                            <div class="form-error">
                                {{ form_errors(attribute(new_form, 'nazwa' ~ i)) }}
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            </div>
        {% endfor %}
        </div>


        {{ form_end(new_form) }}
    {% endblock new_form %}
{% endblock %}



